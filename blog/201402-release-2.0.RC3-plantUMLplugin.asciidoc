:doctitle:    Reflect 2.0 preview
:description: plantUML plugin
:iconsfont: font-awesome
:imagesdir: ./images
:author:    Laurent Laville
:revdate:   2014-02-23
:pubdate:   Sun, 23 Feb 2014 20:52:14 +0100
:summary:   plantUML:run command to print UML diagrams
:jumbotron:
:jumbotron-fullwidth:
:footer-fullwidth:

[id="post-9"]
== {summary}

[quote,Published by {author} on {revdate}]
____
image:icons/font-awesome/clock-o.png[alt="future",icon="clock-o",size="4x"]

[role="lead"]
Future release 2.0.0RC3 adopt another new command

After conversion of concrete example
http://php5.laurent-laville.org/reflect/manual/2.0/en/measuring-size-project.html["Measuring the size of a PHP project"]
to a new command (see http://php5.laurent-laville.org/reflect/blog/201402-release-2.0.RC3-preview.html[previous post]),
I've decided to include in future release 2.0.0RC3 a new command *plantUML:run*
(commit https://github.com/llaville/php-reflect/commit/566bf462e4c63321d47cb787192a4abc699f2e16[566bf46]).

This plugin will replace the concrete example
http://php5.laurent-laville.org/reflect/manual/2.0/en/make-uml-diagrams.html["Make UML diagrams"].

With this plugin you can make package UML diagram (http://plantuml.sourceforge.net/classes.html#Using), e.g :
with such simple `reflect.json` config file.
----
{
    "source-providers": [
        {
            "in": "phar:///var/dist/phpreflect-2.0.0RC2-6-ge55464a.phar as Reflect2RC2",
            "path": "src/",
            "name": "*.php"
        }
    "plugins": [
        {
            "name": "PlantUML",
            "class": "Bartlett\\Reflect\\Plugin\\PlantUML\\PlantUMLPlugin"
        }
}
----

.Run the command below
====
----
$ php bin/reflect --profile --plantUML:run --alias Reflect2RC2 --package="Bartlett\Reflect\Model"
----
====

You will get such output.
----
package "Bartlett\\Reflect\\Model" {
abstract AbstractFunctionModel
abstract AbstractModel
class ClassModel
class ConstantModel
class DependencyModel
class FunctionModel
class IncludeModel
class MethodModel
class PackageModel
class ParameterModel
class PropertyModel
}
----

Put in in a file , e.g `packageDiagram.plantuml`, and send the result to plantUML
----
$ java -jar plantuml.jar packageDiagram.plantuml
----
and you will get a PNG image as this one :

image::bartlett_reflect_model.packagediagram.png[options="responsive"]


.Run the command below
====
----
$ php bin/reflect --profile --plantUML:run --alias Reflect2RC2 --class="Bartlett\Reflect"
----
====

You will get such output.
----
class Reflect{
    #pm
    #files
    +getProviderManager()
    +setProviderManager()
    +parse()
    +getPackages()
    +getFiles()
    -buildFromCache()
}
AbstractDispatcher <|-- Reflect
interface ManagerInterface {
}
ManagerInterface <|.. Reflect
----

Put in in a file , e.g `classDiagram.plantuml`, and send the result to plantUML
----
$ java -jar plantuml.jar classDiagram.plantuml
----
and you will get a PNG image as this one :

image::bartlett_reflect.classdiagram.png[options="responsive"]
____
