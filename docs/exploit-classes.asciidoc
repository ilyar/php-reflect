
=== Classes

[role="lead"]
The `Bartlett\Reflect\Model\ClassModel` class reports information about a class, an interface or a trait.

[label label-primary]#Reflect# returns a list of classes with the +getClasses()+ method,
and each of these elements can be exploited with this `ClassModel`.

[source,php]
----
<?php

use Bartlett\Reflect;

$reflect = new Reflect;

foreach ($reflect->getPackages() as $package) {
    $classes = $package->getClasses();
}
----

This list (+$classes+) is an iterator, that can be traversed by a simple foreach loop.
Each +$class+ element returned is an instance of `ClassModel`.

[source,php]
.Gets an array of methods for the class
----
<?php

use Bartlett\Reflect;

foreach ($reflect->getPackages() as $package) {
    foreach ($package->getClasses() as $class) {
        printf( 'Processing class "%s" ...' . PHP_EOL, $class->getName() );
        $methods = array();

        foreach ($class->getMethods() as $method) {
            $methods[] = $method->getShortName();
        }
        printf( 'Methods are : %s' . PHP_EOL, print_r($methods, true) );
    }
}
----

[source,php]
.Gets an array of constants for the class.
----
<?php

use Bartlett\Reflect;

foreach ($reflect->getPackages() as $package) {
    foreach ($package->getClasses() as $class) {
        printf( 'Processing class "%s" ...' . PHP_EOL, $class->getName() );
        $constants = array();

        foreach ($class->getConstants() as $constant) {
            $constants[ $constant->getShortName() ] = $constant->getValue();
        }
        printf( 'Constants are : %s' . PHP_EOL, print_r($constants, true) );
    }
}
----

[source,php]
.Gets an array of properties for the class
----
<?php

use Bartlett\Reflect;

foreach ($reflect->getPackages() as $package) {
    foreach ($package->getClasses() as $class) {
        printf( 'Processing class "%s" ...' . PHP_EOL, $class->getName() );
        $properties = array();

        foreach ($class->getProperties() as $property) {
            $properties[] = $property->getName();
        }
        printf( 'Properties are : %s' . PHP_EOL, print_r($properties, true) );
    }
}
----

And lot more. See ClassModel Reference to learn all features and behaviors.

[CAUTION]
=====================================================================
`ClassModel` Reference is not yet available.
=====================================================================
