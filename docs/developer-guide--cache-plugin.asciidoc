= Cache Plugin
:description: Caching specifications to speed up future data source parsing.
include::revision.asciidoc[]
include::attributes.asciidoc[]

************************************************
This plugin is almost unnecessary if you unload the `xdebug` extension
that slows down execution.
Learn more on https://github.com/llaville/php-compat-info/issues/167[RFC].
************************************************

== Register Plugin

If you want to use the https://github.com/doctrine/cache[Doctrine cache component],
skip this section.

If you want to use your own version of cache plugin, use following pattern.

[source,php]
----
<?php

namespace YourNamespace;

use Bartlett\Reflect\Plugin\CachePlugin as BaseCachePlugin;

class CachePlugin extends BaseCachePlugin
{
    // all additional code you need
}
----

And the configuration in JSON file :

[source,json]
----
{
    "source-providers": [
    ],
    "plugins": [
        {
            "name": "Cache",
            "class": "YourNamespace\\CachePlugin",
            "options": []
        }
    ],
    "analysers" : [
    ],
    "services": [
    ]
}
----


== Doctrine Adapter

[role="lead"]
Use one of the most famous caching solution, provided by the Doctrine project.

Use this shortcut version that is strictly equivalent to next in section file cache.

[source,json]
----
{
    "source-providers": [
    ],
    "plugins": [
        {
            "name": "Cache",
            "class": "Bartlett\\Reflect\\Plugin\\CachePlugin",
            "options": []
        }
    ],
    "analysers" : [
    ],
    "services": [
    ]
}
----


== File cache

[role="lead"]
Doctrine File backend to store your Reflect results in the local file system.

[source,json]
----
{
    "source-providers": [
    ],
    "plugins": [
        {
            "name": "Cache",
            "class": "Bartlett\\Reflect\\Plugin\\CachePlugin",
            "options": {
                "adapter": "DoctrineCacheAdapter",
                "backend": {
                    "class": "Doctrine\\Common\\Cache\\FilesystemCache",
                    "args": [
                        "%{TEMP}/bartlett/cache"
                    ]
                }
            }
        }
    ],
    "analysers" : [
    ],
    "services": [
    ]
}
----

In the source code above, we use the standard Doctrine File cache provider, and store
results in the default system temporary directory
( see php http://www.php.net/manual/en/function.sys-get-temp-dir.php[sys_get_temp_dir()] function ).

== SQLite3 cache

See a full example with doctrine SQLite3Cache driver at {rawbaseurl}/examples/api_analyser_run_with_cache.php
