ifndef::basebackend-docbook[]

= Source Provider
:description: How to identify a data source and parse its contents.
include::revision.asciidoc[]
include::attributes.asciidoc[]

endif::basebackend-docbook[]

== Data Source Identification

[role="lead"]
Basic or Complex Strategy to identify the Data Source.

WARNING: Now, and for the following chapters, we will not mention how you load the classes.
Depending of the install strategy you've adopted, Composer or other, don't forget to load your autoloader.

Compare to version 2,
[label label-primary]#Reflect# 3 offers two simple strategies to identify the data source.

First, is to give the relative or absolute path to file or directory to parse (without limitation).

Second, is to specify options to customize parsing process, to the
Symfony http://symfony.com/doc/current/components/finder.html[Finder] Component.

=== Basic Strategy

With all SAPI, no JSON config file is required (as it was for Reflect 2). You have just
to give the relative or absolute path to file or directory to parse.

It's also possible to specify any archive (phar, zip, tar, tgz, gz, rar) as file source.

.Example with a simple file or directory (absolute path)
[source,bash]
----
$ phpreflect analyser:run /absolute/path/to/source
----

.Example with a simple file or directory (relative path)
[source,bash]
----
$ phpreflect analyser:run ./relative/path/to/source
----

=== Complex Strategy

Still as it was with Reflect 2, you will need to configure your data source in a JSON file.

Syntax is closed to the Symfony Finder Component that is used to limit data source contents to parse.

.Example to parse an archive
[source,json]
----
{
    "source-providers": [
        {
            "in": "phar:///var/dist/owncloud-7.0.2.tar as owncloud7",
            "name": "*.php",
            "exclude": ["3rdparty"]
        }
    ],
    "plugins": [
    ],
    "analysers" : [
    ]
}
----
IMPORTANT: Do not forget the `phar://` protocol in front of archive identification.

TIP: Use alias named here `owncloud7` to identify data source entry in the JSON config file,
rather than the full path `phar:///var/dist/owncloud-7.0.2.tar`.

.Example to parse a directory
[source,json]
----
{
    "source-providers": [
        {
            "in": "/home/github/phing/ as phing2",
            "path": ["bin", "classes"],
            "exclude": ["test"],
            "name": "*.php"
        }
    ],
    "plugins": [
    ],
    "analysers" : [
    ]
}
----

Learn more about
ifdef::basebackend-docbook[]
directives, see xref:_section_source_providers[]
endif::basebackend-docbook[]
ifdef::basebackend-html[]
link:user-guide&#45;&#45;configuration.html#_section_source_providers[source providers].
endif::basebackend-html[]
